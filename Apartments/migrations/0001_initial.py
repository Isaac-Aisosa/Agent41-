# Generated by Django 3.2.7 on 2021-10-25 17:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApartmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=225, verbose_name='Type of Apartment')),
            ],
        ),
        migrations.CreateModel(
            name='ApartmentTypeCommercial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=225, null=True, verbose_name='Type of Apartment')),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(blank=True, max_length=225, null=True, verbose_name='city')),
            ],
        ),
        migrations.CreateModel(
            name='CommercialApartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Apartment Name')),
                ('landlord_name', models.CharField(blank=True, default='mr landlord', max_length=100, null=True, verbose_name='Landlord or CareTaker Name')),
                ('landlord_phone', models.CharField(blank=True, default='landlord phone', max_length=100, null=True, verbose_name='Landlord or CareTaker phone')),
                ('description', models.TextField(blank=True, max_length=225, null=True, verbose_name='Description')),
                ('power', models.CharField(choices=[('24 hours daily', '24hours daily'), ('20 hours daily', '20 hours daily'), ('18 hours daily', '18 hours daily'), ('10 hours daily', '10 hours daily'), ('8 hours daily', '8 hours daily'), ('6 hours daily', '6 hours daily'), ('4 hours daily', '4 hours daily'), ('3 hours daily', '3 hours daily'), ('2 hours daily', '2 hours daily'), ('1 hour daily', '1 hour daily'), ('No power', 'No power')], default='Power Status', max_length=150, verbose_name='Power Status')),
                ('Address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Full Address')),
                ('price', models.BigIntegerField(default=0, verbose_name='Yearly Price')),
                ('negotiable', models.BooleanField(default=False, verbose_name='Is Price Negotiable')),
                ('vacant', models.BooleanField(default=True)),
                ('vacancy', models.BigIntegerField(blank=True, default=0, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('unapproved', models.BooleanField(default=False)),
                ('star', models.IntegerField(blank=True, default=1, null=True)),
                ('commercial', models.BooleanField(default=True)),
                ('font_image', models.FileField(default='noImage.png', upload_to=' media/Apartment/commercial/', verbose_name='FontView Image')),
                ('side_image', models.FileField(default='noImage.png', upload_to=' media/Apartment/commercial/', verbose_name='SideView Image')),
                ('other_image', models.FileField(blank=True, default='noImage.png', null=True, upload_to=' media/Apartment/commercial/', verbose_name='other Image')),
                ('other_image2', models.FileField(blank=True, default='noImage.png', null=True, upload_to=' media/Apartment/commercial/', verbose_name='other Image')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.city')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=225, null=True, verbose_name='location')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.city')),
            ],
        ),
        migrations.CreateModel(
            name='ResidentialApartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Apartment Name')),
                ('landlord_name', models.CharField(blank=True, default='mr landlord', max_length=100, null=True, verbose_name='Landlord or CareTaker Name')),
                ('landlord_phone', models.CharField(blank=True, default='landlord phone', max_length=100, null=True, verbose_name='Landlord or CareTaker phone')),
                ('description', models.TextField(blank=True, max_length=225, null=True, verbose_name='Description')),
                ('power', models.CharField(choices=[('24 hours daily', '24hours daily'), ('20 hours daily', '20 hours daily'), ('18 hours daily', '18 hours daily'), ('10 hours daily', '10 hours daily'), ('8 hours daily', '8 hours daily'), ('6 hours daily', '6 hours daily'), ('4 hours daily', '4 hours daily'), ('3 hours daily', '3 hours daily'), ('2 hours daily', '2 hours daily'), ('1 hour daily', '1 hour daily'), ('No power', 'No power')], default='Power Status', max_length=150, verbose_name='Power Status')),
                ('water', models.CharField(choices=[('Borehole water Available inside apartment', 'Borehole water Available inside apartment'), ('Borehole water Available outside apartment', 'Borehole water Available outside apartment'), ('Borehole water Available close to apartment', 'Borehole water Available close to apartment'), ('Borehole water far from apartment', 'Borehole water far from apartment'), ('Reservoir is Available', 'Reservoir is Available'), ('Borehole water and Reservoir is Available', 'Borehole water and Reservoir is Available'), ('No water', 'No water')], default='Water Status', max_length=150, verbose_name='Water Status')),
                ('Address', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Full Address')),
                ('price', models.BigIntegerField(default=0, verbose_name='Yearly Price')),
                ('negotiable', models.BooleanField(default=False, verbose_name='Negotiable')),
                ('vacant', models.BooleanField(default=True)),
                ('approved', models.BooleanField(default=False)),
                ('unapproved', models.BooleanField(default=False)),
                ('star', models.IntegerField(blank=True, default=1, null=True)),
                ('residential', models.BooleanField(default=True)),
                ('vacancy', models.BigIntegerField(blank=True, default=0, null=True)),
                ('font_image', models.FileField(default='noImage.png', upload_to=' media/Apartment/Residential/', verbose_name='FontView Image')),
                ('side_image', models.FileField(default='noImage.png', upload_to=' media/Apartment/Residential/', verbose_name='SideView Image')),
                ('Room1_image', models.FileField(blank=True, default='noImage.png', null=True, upload_to=' media/Apartment/Residential/', verbose_name='Room Image')),
                ('Room2_image', models.FileField(blank=True, default='noImage.png', null=True, upload_to=' media/Apartment/Residential/', verbose_name='Setting Room Image')),
                ('kitchen_image', models.FileField(blank=True, default='noImage.png', null=True, upload_to=' media/Apartment/Residential/', verbose_name='kitchen Image')),
                ('Rest_room', models.FileField(blank=True, default='noImage.png', null=True, upload_to=' media/Apartment/Residential/', verbose_name='Rest Room Image')),
                ('other_image', models.FileField(blank=True, default='noImage.png', null=True, upload_to=' media/Apartment/Residential/', verbose_name='other Image')),
                ('other_image2', models.FileField(blank=True, default='noImage.png', null=True, upload_to=' media/Apartment/Residential/', verbose_name='other Image')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.city')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.location')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(blank=True, max_length=225, null=True, verbose_name='State')),
            ],
        ),
        migrations.CreateModel(
            name='ResidentialApartmentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(max_length=225, verbose_name='Client Name')),
                ('phone', models.CharField(max_length=15, verbose_name='phone number')),
                ('seen', models.BooleanField(default=False)),
                ('comfirmed', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Residential_apartment', to='Apartments.residentialapartment')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='confirm_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='residentialapartment',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.state'),
        ),
        migrations.AddField(
            model_name='residentialapartment',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.apartmenttype'),
        ),
        migrations.AddField(
            model_name='residentialapartment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='CommercialApartmentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(max_length=225, verbose_name='Client Name')),
                ('phone', models.CharField(max_length=15, verbose_name='phone number')),
                ('seen', models.BooleanField(default=False)),
                ('comfirmed', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Commercial_apartment', to='Apartments.commercialapartment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='confirm_by_comm', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='commercialapartment',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.location'),
        ),
        migrations.AddField(
            model_name='commercialapartment',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.state'),
        ),
        migrations.AddField(
            model_name='commercialapartment',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Apartments.apartmenttypecommercial'),
        ),
        migrations.AddField(
            model_name='commercialapartment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commercial_apartment_landlord', to=settings.AUTH_USER_MODEL),
        ),
    ]
